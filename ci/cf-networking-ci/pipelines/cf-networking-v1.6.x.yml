groups:
- name: cf-networking-v1.6.x
  jobs:
  - mysql-tests
  - mysql-5.6-tests
  - postgres-tests
  - windows-tests
  - unit-and-integration-tests
  - beanie-deploy
  - beanie-test
  - beanie-smoke
  - beanie-cats
  - porkpie-deploy
  - smoked-porkpie
  - ship-what
  - shipit
  - merge-master
  - bump-patch-version
  - update-cli-plugin-repo
- name: beanie
  jobs:
  - beanie-bbl-up
  - beanie-bbl-destroy
  - beanie-deploy
  - beanie-test
  - delete-beanie-deployment
- name: porkpie
  jobs:
  - porkpie-bbl-up
  - porkpie-bbl-destroy
  - porkpie-deploy
  - smoked-porkpie
  - delete-porkpie-deployment
- name: bbl
  jobs:
  - beanie-bbl-up
  - beanie-bbl-destroy
  - porkpie-bbl-up
  - porkpie-bbl-destroy
- name: cleanup
  jobs:
  - delete-beanie-deployment
  - delete-porkpie-deployment
- name: version
  jobs:
  - major-bump
  - minor-bump
  - patch-bump

resources:
  - name: cli-plugin-fork
    type: git
    source:
      uri: "git@github.com:cf-container-networking/cli-plugin-repo.git"
      private_key: {{cli-plugin-fork-push-key}}
      branch: update-networking-plugin
  - name: cli-plugin-master
    type: git
    source:
      uri: "https://github.com/cloudfoundry/cli-plugin-repo.git"
      branch: master

  ###### Control plane
  - name: cf-networking-release-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-networking-release
      paths: [ ci ]
      branch: v1.6.x
  - name: cf-networking-deployments
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-networking-deployments.git"
      branch: master
      private_key: {{cf-networking-deployments-push-key}}
  - name: cats-concourse-task
    type: git
    source:
      uri: https://github.com/cf-container-networking/cats-concourse-task
      branch: v1.6.x
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: master
  - name: cf-deployment
    type: git
    source:
      branch: master
      tag_filter: v0.24.0
      uri: https://github.com/cloudfoundry/cf-deployment.git
  - name: cf-deployment-0.4.0
    type: git
    source:
      branch: master
      tag_filter: v0.4.0  # May 19
      uri: https://github.com/cloudfoundry/cf-deployment.git

  ###### BOSH release repos
  - name: cf-networking-v1.6.x
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: v1.6.x
      ignore_paths:
        - docs
      private_key: {{cf-networking-deploy-key}}

  - name: cf-networking-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: develop
      private_key: {{cf-networking-deploy-key}}

  - name: cf-networking-v0.25.x
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: v0.25.x
      ignore_paths:
        - docs
      private_key: {{cf-networking-deploy-key}}

  - name: cf-networking-master
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-networking-release.git
      branch: master
      private_key: {{cf-networking-deploy-key}}

  ####### Tests
  - name: cf-acceptance-tests
    type: git
    source:
      branch: cf0.22
      uri: git://github.com/cloudfoundry/cf-acceptance-tests.git
  #######  Release management
  - name: version
    type: semver
    source:
      bucket: cf-networking-v1.6.x-release-semver
      region_name: us-west-2
      initial_version: 1.6.1
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: cf-networking-tarball
    type: s3
    source:
      bucket: cf-networking-v1.6.x-candidate-tarballs
      region_name: us-west-2
      regexp: releases/cf-networking-(.*).tgz
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  # Github release
  - name: cf-networking-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: cf-networking-release
      access_token: {{github-access-token}}

jobs:
  - name: postgres-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-v1.6.x
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/postgres-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x

  - name: mysql-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-v1.6.x
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/mysql-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x

  - name: mysql-5.6-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-v1.6.x
        trigger: true
      - get: cf-networking-release-ci
    - task: unit-and-integration-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/mysql-5.6-tests.yml
      privileged: true
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x

  - name: windows-tests
    public: true
    plan:
    - aggregate:
      - get: cf-networking-v1.6.x
        trigger: true
      - get: cf-networking-release-ci
    - task: garden-external-networker-windows
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/garden-external-networker-windows.yml
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x
        ci: cf-networking-release-ci

  - name: unit-and-integration-tests
    public: true
    plan:
    - get: cf-networking-v1.6.x
      passed: [postgres-tests, mysql-tests, mysql-5.6-tests, windows-tests]
      trigger: true

  - name: porkpie-bbl-up
    serial_groups: [porkpie]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: ../gcp/service-account.key.json
        BBL_GCP_PROJECT_ID: cf-container-networking-gcp
        BBL_GCP_REGION: us-east1
        BBL_GCP_ZONE: us-east1-b
        BBL_STATE_DIR: environments/porkpie/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{porkpie-lb-cert}}
        BBL_LB_KEY: {{porkpie-lb-key}}
        LB_DOMAIN: porkpie.c2c.cf-app.com
        BBL_ENV_NAME: porkpie
      input_mapping:
        bbl-state: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: porkpie-bbl-destroy
    serial_groups: [porkpie]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/porkpie/
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: porkpie-deploy
    serial_groups: [porkpie]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment-0.4.0
        version: {ref: v0.4.0}
      - get: cf-networking-v0.25.x
        trigger: true
      - get: cf-networking-v1.6.x
        trigger: true
        passed: [unit-and-integration-tests]
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/porkpie/
      input_mapping:
        bbl-state: cf-networking-deployments
        cf-deployment: cf-deployment-0.4.0
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: porkpie
      input_mapping:
        cf-networking-release: cf-networking-v0.25.x
        deployments-repo: cf-networking-deployments
        cf-deployment: cf-deployment-0.4.0
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/porkpie/
        SYSTEM_DOMAIN: porkpie.c2c.cf-app.com
        OPS_FILES: gcp.yml use-3-azs-for-router.yml use-compiled-releases.yml bypass-cc-bridge.yml datadog.yml cf-networking.yml opsfile.yml
        VARS_STORE_FILE: environments/porkpie/vars-store.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        release: cf-networking-v0.25.x
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
        cf-deployment: cf-deployment-0.4.0
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/porkpie/
        CLEAN_ALL: false
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: smoked-porkpie
    serial_groups: [porkpie-test-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-networking-v1.6.x
        passed: [porkpie-deploy]
        trigger: true
      - get: cf-networking-v0.25.x
      - get: cf-networking-release-ci
      - get: cf-deployment-0.4.0
        version: {ref: v0.4.0}
        passed: [porkpie-deploy]
        trigger: true
    - task: smoke-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/smoke-tests.yml
      params:
        ENVIRONMENT_NAME: porkpie
        ENVIRONMENT_TAG: porkpie.c2c.cf-app.com
        DATADOG_API_KEY: {{datadog_api_key}}
      input_mapping:
        test-config: cf-networking-deployments
        cf-networking: cf-networking-v1.6.x
        cf-networking-tests: cf-networking-v0.25.x

  - name: beanie-bbl-up
    serial_groups: [beanie]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_GCP_SERVICE_ACCOUNT_KEY: ../gcp/service-account.key.json
        BBL_GCP_PROJECT_ID: cf-container-networking-gcp
        BBL_GCP_REGION: us-east1
        BBL_GCP_ZONE: us-east1-b
        BBL_STATE_DIR: environments/beanie/
        BBL_IAAS: gcp
        BBL_LB_CERT: {{beanie-lb-cert}}
        BBL_LB_KEY: {{beanie-lb-key}}
        LB_DOMAIN: beanie.c2c.cf-app.com
        BBL_ENV_NAME: beanie
      input_mapping:
        bbl-state: cf-networking-deployments
        ops-files: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: beanie-bbl-destroy
    serial_groups: [beanie]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
    - task: bbl-destroy
      file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
      params:
        BBL_STATE_DIR: environments/beanie/
      input_mapping:
        bbl-state: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-bbl-state
          rebase: true

  - name: beanie-deploy
    serial_groups: [beanie]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-deployment-concourse-tasks
      - get: cf-networking-deployments
      - get: cf-deployment
        trigger: true
        version: {ref: v0.24.0}
      - get: cf-networking-v1.6.x
        trigger: true
        passed: [unit-and-integration-tests]
      - get: version
        params:
          pre: rc
    - task: upload-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/beanie/
      input_mapping:
        bbl-state: cf-networking-deployments
    - task: collect-ops-files
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/collect-ops-files.yml
      params:
        ENVIRONMENT_NAME: beanie
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x
        deployments-repo: cf-networking-deployments
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
      params:
        BBL_STATE_DIR: environments/beanie/
        SYSTEM_DOMAIN: beanie.c2c.cf-app.com
        OPS_FILES: gcp.yml use-3-azs-for-router.yml use-compiled-releases.yml bypass-cc-bridge.yml datadog.yml cf-networking.yml opsfile.yml
        VARS_STORE_FILE: environments/beanie/vars-store.yml
      input_mapping:
        bbl-state: cf-networking-deployments
        release: cf-networking-v1.6.x
        vars-files: cf-networking-deployments
        vars-store: cf-networking-deployments
      ensure:
        put: cf-networking-deployments
        params:
          repository: updated-vars-store
          rebase: true
    - task: create-release-tarball
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/create-release-tarball.yml
      input_mapping:
        cf-networking: cf-networking-v1.6.x
    - put: cf-networking-tarball
      params:
        file: tarballs/cf-networking-*.tgz
    - put: version
      params: {file: version/number}
    - task: bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      params:
        BBL_STATE_DIR: environments/beanie/
        CLEAN_ALL: false
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: beanie-test
    serial_groups: [beanie]
    plan:
    - aggregate:
      - get: cf-networking-tarball
      - get: version
        passed: [beanie-deploy]
      - get: cf-networking-release-ci
      - get: cf-networking-deployments
        passed: [beanie-deploy]
      - get: cf-deployment
        passed: [beanie-deploy]
        version: {ref: v0.24.0}
      - get: cf-networking-v1.6.x
        passed: [beanie-deploy]
        trigger: true
    - task: acceptance-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/acceptance-tests.yml
      input_mapping:
        cf-networking: cf-networking-v1.6.x
        test-config: cf-networking-deployments
        vars-store: cf-networking-deployments
      params:
        ENVIRONMENT_NAME: beanie

  - name: beanie-smoke
    serial_groups: [beanie-test-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-networking-v1.6.x
        passed: [beanie-test]
        trigger: true
      - get: cf-networking-release-ci
      - get: cf-deployment
        passed: [beanie-test]
        trigger: true
        version: {ref: v0.24.0}
    - task: smoke-tests
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/smoke-tests.yml
      params:
        ENVIRONMENT_NAME: beanie
        ENVIRONMENT_TAG: beanie.c2c.cf-app.com
        DATADOG_API_KEY: {{datadog_api_key}}
      input_mapping:
        test-config: cf-networking-deployments
        cf-networking: cf-networking-v1.6.x
        cf-networking-tests: cf-networking-v1.6.x

  - name: beanie-cats
    serial_groups: [beanie-test-group, beanie-deploy-group]
    plan:
    - aggregate:
      - get: cf-networking-release-ci
      - get: cf-acceptance-tests
      - get: cats-concourse-task
      - get: cf-networking-v1.6.x
        passed: [beanie-test]
        trigger: true
      - get: cf-deployment
        passed: [beanie-test]
        trigger: true
        version: {ref: v0.24.0}
      - get: cf-networking-deployments
      - get: cf-networking-tarball
        passed: [beanie-test]
      - get: version
        passed: [beanie-test]
    - task: copy-config
      file: cf-networking-release-ci/ci/cf-networking-ci/tasks/copy-config.yml
      params:
        ENVIRONMENT: beanie
    - task: cats
      file: cats-concourse-task/task.yml
      input_mapping:
        cf-networking-release: cf-networking-v1.6.x
      params:
        NODES: 8

##### Human-triggered utilities

  - name: delete-beanie-deployment
    public: true
    serial_groups: [beanie]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/beanie/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: delete-porkpie-deployment
    public: true
    serial_groups: [porkpie]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/porkpie/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: ship-what
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: version
          passed: [beanie-test]
        - get: cf-networking-v1.6.x
          params:
            submodules: none
          passed: [beanie-smoke, smoked-porkpie]
          trigger: true
        - get: cf-deployment
          passed: [beanie-test]
          version: {ref: v0.24.0}
        - get: cf-networking-tarball
          passed: [beanie-test]

  - name: shipit
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: cf-networking-deployments
        - get: cf-networking-release-ci
        - get: version
          params:
            bump: final
          passed: [ship-what]
        - get: cf-networking-master
          params:
            submodules: none
        - get: cf-networking-v1.6.x
          params:
            submodules: none
          passed: [ship-what]
        - get: cf-deployment
          passed: [ship-what]
          version: {ref: v0.24.0}
        - get: cf-networking-tarball
          passed: [ship-what]
        - get: cli-plugin-fork
        - get: cli-plugin-master
      - task: shipit
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/shipit.yml
        input_mapping:
          cf-networking: cf-networking-v1.6.x
      - task: build-cli
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/build-cli.yml
        input_mapping:
          cf-networking: cf-networking-v1.6.x
      - put: version
        params: {file: version/number}
      - put: cf-networking-master
        params:
          repository: release/master
          tag: version/number
          tag_prefix: v
      - put: cf-networking-tarball
        params:
          file: final-release/cf-networking-*.tgz
      - task: build-release-notes
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/build-release-notes.yml
      - put: cf-networking-github-release
        params:
          name: version/number
          tag: version/number
          body: release-notes/notes.md
          tag_prefix: v
          globs:
          - final-release/cf-networking-*.tgz
          - binaries/network-policy-plugin-*

  # bump patch version (i.e. 0.1.0 -> 0.1.1)
  - name: bump-patch-version
    serial_groups: [version]
    plan:
    - aggregate:
      - get: version
        trigger: true
        passed: [shipit]
        params: {bump: patch, pre: rc}
    - put: version
      params: {file: version/number}


  - name: update-cli-plugin-repo
    plan:
    - do:
      - aggregate:
        - get: version
          passed: [shipit]
        - get: cf-networking-release-ci
        - get: cli-plugin-fork
        - get: cli-plugin-master
        - get: cf-networking-master
          params:  # just here for a dependency/trigger, so keep it light
            submodules: none
            depth: 1
          passed: [shipit]
        - get: cf-networking-github-release
          version: { tag: 'v1.6.1' }
          params:
            globs:
            - network-policy-plugin-*
      - task: update-plugin-repo
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/update-plugin-repo.yml
      - put: cli-plugin-fork
        params:
          repository: fork-merged
          force: true
      - task: create-plugin-pr
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/create-plugin-pr.yml
        params:
          GITHUB_TOKEN: {{github-access-token}}

  # merge master back to develop
  - name: merge-master
    plan:
    - do:
      - aggregate:
        - get: cf-networking-release-ci
        - get: cf-networking-master
          params:
            submodules: none
          passed: [shipit]
          trigger: true
        - get: cf-networking-develop
          params: {submodules: none}
      - task: merge-master
        file: cf-networking-release-ci/ci/cf-networking-ci/tasks/merge-master.yml
      - put: cf-networking-develop
        params: {repository: release-merged}


  # versioning
  - name: patch-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: patch}
    - put: version
      params: {file: version/number}

  - name: minor-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: minor}
    - put: version
      params: {file: version/number}

  - name: major-bump
    serial_groups: [version]
    plan:
    - get: version
      params: {bump: major}
    - put: version
      params: {file: version/number}
